{"version":3,"sources":["modules/nowPlaying.js","modules/popular.js","modules/topRated.js","modules/upcoming.js","modules/home.js","modules/info.js","App.js","serviceWorker.js","reducer/reducer.js","index.js"],"names":["NowPlaying","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","initiateCarousel","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","interval","carouselSlide","carouselImages","carouselCounter","carouselTitle","carouselRating","carouselWrapper","size","info","duration","wrap","_context","prev","next","document","querySelector","querySelectorAll","counter","clientWidth","style","transform","forEach","value","push","id","getAttribute","title","rating","setState","carouselInfo","transition","innerHTML","length","state","load","setInterval","window","addEventListener","stop","_x","apply","arguments","type","category","heading","headingSub","_this2","fetch","api_url","api_key","then","response","json","data","nowPlaying","prevProps","prevState","_this3","nextProps","clearInterval","_this4","dat","list","undefined","map","element","react_default","createElement","key","src","backdrop_path","alt","name","vote_average","contentid","className","Link","to","onLoad","Component","connect","playing","dispatch","result","Popular","rightScroll","getElementById","scrollLeft","leftScroll","popular","poster_path","onClick","TopRated","Upcoming","upcoming","Home","handleClick","display","renderDisplay","modules_nowPlaying","modules_upcoming","modules_popular","modules_topRated","href","Info","castData","match","params","info_id","cast","slice","poster_url","base_url","body","backgroundImage","castList","profile_path","character","genreList","genres","release_date","status","tagline","overview","App","HashRouter","Route","exact","path","component","Boolean","location","hostname","initState","action","results","objectSpread","topRated","store","createStore","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0b887165.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass NowPlaying extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id: null,\r\n            type: this.props.type,\r\n            category: this.props.category,\r\n            heading: this.props.heading,\r\n            headingSub: this.props.headingSub,\r\n            carouselInfo: []\r\n        };\r\n\r\n        //for setting autoplay of carousel\r\n        this.load = true;\r\n        //keep track of slide count\r\n        this.counter = 0;\r\n        //set to setInterval(). used to clear setInterval() on component unmount\r\n        this.interval = null;\r\n    }\r\n\r\n    //function to set up carousel\r\n    initiateCarousel = async (interval) =>{\r\n        //fetch nodes from DOM\r\n        const carouselSlide = document.querySelector(\".carousel-slide\");\r\n        const carouselImages = document.querySelectorAll(\".carousel-slide img\");\r\n        const carouselCounter = document.querySelector(\".carousel-counter p\");\r\n        const carouselTitle = document.querySelector(\".carousel-info h2\");\r\n        const carouselRating = document.querySelector(\".carousel-info p span\");\r\n        const carouselWrapper = document.querySelector(\".carousel-wrapper\");\r\n        \r\n        //initiate to 0 on type change\r\n        this.counter = 0;\r\n        //fetch size to set up carousel slide\r\n        let size = carouselWrapper.clientWidth;\r\n        carouselSlide.style.transform = 'translateX(' + (-size * this.counter) + 'px)';\r\n        \r\n        //initialize for gathering image details\r\n        let info = [];\r\n\r\n        //get image details\r\n        await carouselImages.forEach(value => {\r\n            info.push({\r\n                id: value.getAttribute('contentid'),\r\n                title: value.getAttribute('title'),\r\n                rating: value.getAttribute('rating')\r\n            });\r\n        });\r\n\r\n        //set state once info is gathered\r\n        await this.setState({\r\n            carouselInfo: info\r\n        });\r\n        \r\n        //carousel autoplay duration\r\n        const duration = interval;\r\n\r\n        //update DOM style and display info\r\n        carouselSlide.style.transition = 'transform 0.4s ease-in-out';\r\n        carouselCounter.innerHTML = (this.counter+1)+'/'+carouselImages.length;\r\n        carouselTitle.innerHTML = this.state.carouselInfo[this.counter].title;\r\n        carouselRating.innerHTML = this.state.carouselInfo[this.counter].rating;\r\n        \r\n        //unique id to set up carousel link\r\n        this.setState({\r\n            id: this.state.carouselInfo[this.counter].id\r\n        });\r\n        \r\n        //sets up autoplay of carousel\r\n        if(this.load){\r\n            this.interval = setInterval(() => {\r\n                if(this.counter>=carouselImages.length-1)\r\n                    this.counter = 0;\r\n                else\r\n                    this.counter++;\r\n            \r\n            //update DOM style and display info based on slide counter\r\n            carouselSlide.style.transform = 'translateX(' + (-size * this.counter) + 'px)';\r\n            carouselCounter.innerHTML = (this.counter+1)+'/'+carouselImages.length;\r\n            carouselTitle.innerHTML = this.state.carouselInfo[this.counter].title;\r\n            carouselRating.innerHTML = this.state.carouselInfo[this.counter].rating;\r\n\r\n            //state update on each slide change\r\n            this.setState({\r\n                id: this.state.carouselInfo[this.counter].id\r\n            });\r\n            },duration);\r\n\r\n            this.load = false;\r\n        }\r\n\r\n        //on window resize sets slide in carousel to initial state\r\n        window.addEventListener('resize', () => {\r\n            size = carouselWrapper.clientWidth;\r\n            this.counter = 0;\r\n            carouselSlide.style.transform = 'translateX(' + (-size * this.counter) + 'px)';\r\n            carouselCounter.innerHTML = (this.counter+1)+'/'+carouselImages.length;\r\n            carouselTitle.innerHTML = this.state.carouselInfo[this.counter].title;\r\n            carouselRating.innerHTML = this.state.carouselInfo[this.counter].rating;\r\n            \r\n        });\r\n    }\r\n\r\n    //fetch data from api on initial load\r\n    componentDidMount(){\r\n        fetch(this.props.api_url+this.state.type+\"/\"+this.state.category+\"?api_key=\"+this.props.api_key+\"&language=en-US&page=1\")\r\n            .then(response => response.json())\r\n            .then(data => this.props.nowPlaying(data));\r\n    }\r\n\r\n    //update data in redux on state type change\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(prevState.type !== this.state.type){\r\n        fetch(this.props.api_url+this.state.type+\"/\"+this.state.category+\"?api_key=\"+this.props.api_key+\"&language=en-US&page=1\")\r\n            .then(response => response.json())\r\n            .then(data => this.props.nowPlaying(data));\r\n        }\r\n    }\r\n\r\n    //update state on props change\r\n    componentWillReceiveProps(nextProps){\r\n        this.setState({\r\n            type: nextProps.type,\r\n            category: nextProps.category,\r\n            heading: nextProps.heading,\r\n            headingSub: nextProps.headingSub\r\n          });\r\n    }\r\n    \r\n    //clear set interval loop\r\n    componentWillUnmount(){\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    render() {\r\n        const { dat } = this.props;\r\n        //image url path\r\n        const base_url = \"https://image.tmdb.org/t/p/w1280\";\r\n        //map data for rendering\r\n        const list = (dat!==undefined) ? (\r\n            dat.map(element => {\r\n                return (\r\n                    <img key={element.id} src={(element.backdrop_path !==null) ? (base_url + element.backdrop_path) : ''} alt={element.title || element.name} title={element.title || element.name} rating={element.vote_average} contentid={element.id}/>\r\n                ); \r\n            })\r\n        ) : (\r\n                <p>Loading..........</p>\r\n        );\r\n        \r\n        \r\n        return(\r\n            <div id=\"carousel\" className=\"carousel-wrapper\">\r\n\r\n                \r\n                <Link to={'/info/'+this.state.type+'/'+this.state.id} className=\"overlay-link\"></Link>\r\n\r\n                <div className=\"overlay-text\">\r\n                    <div className=\"carousel-info\">\r\n                        <h1>{this.state.heading} <span>{this.state.headingSub}</span></h1>\r\n                        <h2></h2>\r\n                        <p>Rating - <span></span></p>\r\n                    </div>\r\n                    <div className=\"carousel-counter\">\r\n                        <p></p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"carousel-slide\" onLoad={() => this.initiateCarousel(4000)}>\r\n                    {list}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      dat: state.playing\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        nowPlaying: (result) => {\r\n            return dispatch(\r\n            {\r\n                type: 'SET_NOW_PLAYING',\r\n                data: result\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NowPlaying);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Popular extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          type: this.props.type,\r\n          category: this.props.category\r\n        };\r\n    }\r\n\r\n    //initial load\r\n    componentDidMount(){\r\n        fetch(this.props.api_url+this.state.category+\"/\"+this.state.type+\"/week?api_key=\"+this.props.api_key+\"\")\r\n            .then(response => response.json())\r\n            .then(data => this.props.popular(data));\r\n    }\r\n\r\n    //update data on state change\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(prevState.type !== this.state.type){\r\n        fetch(this.props.api_url+this.state.category+\"/\"+this.state.type+\"/week?api_key=\"+this.props.api_key+\"\")\r\n            .then(response => response.json())\r\n            .then(data => this.props.popular(data));\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        this.setState({\r\n            type: nextProps.type,\r\n            category: nextProps.category\r\n          });   \r\n    }\r\n    \r\n    //navigate left and right\r\n    rightScroll = () => {\r\n        let scr = document.getElementById('popular');\r\n        scr.scrollLeft += 284;\r\n    }\r\n\r\n    leftScroll = () => {\r\n        let scr = document.getElementById('popular');\r\n        scr.scrollLeft += -284;\r\n    }\r\n\r\n    render() {\r\n        const { dat } = this.props;\r\n        //image url path\r\n        const base_url = \"https://image.tmdb.org/t/p/w1280\";\r\n        //map data to render\r\n        const list = (dat.length>0 && dat!==undefined) ? (\r\n            dat.map(element => {\r\n                return (\r\n                    <div key={element.id} className=\"img-wrapper\">\r\n                        <Link to={'/info/'+this.state.type+'/'+element.id}>\r\n                            <img src={base_url + element.poster_path} alt={element.title}/>\r\n                        </Link>\r\n                        <span className=\"mov-title\">{element.title || element.name}</span>\r\n                    </div>\r\n                ); \r\n            })\r\n        ) : (\r\n                <p>Loading..........</p>\r\n        );\r\n        \r\n\r\n        return(\r\n            <div className=\"sub-container\">\r\n                <h2 className=\"sub-heading\">POPULAR / TRENDING</h2>\r\n                <hr className=\"sub-heading-line\"/>\r\n                <div className=\"row\">\r\n                    <i id=\"explore-left\" className=\"fas fa-angle-left explore\" onClick={this.leftScroll}></i>\r\n                    <i id=\"explore-right\" className=\"fas fa-angle-right explore\" onClick={this.rightScroll}></i>\r\n                        <div id=\"popular\" className=\"explore-row\">\r\n                            {list}\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      dat: state.popular\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        popular: (result) => {\r\n            return dispatch(\r\n            {\r\n                type: 'SET_POPULAR',\r\n                data: result\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Popular);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass TopRated extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          type: this.props.type,\r\n          category: this.props.category\r\n        };\r\n    }\r\n\r\n    //initial data load from api\r\n    componentDidMount(){\r\n        fetch(this.props.api_url+this.state.type+\"/\"+this.state.category+\"?api_key=\"+this.props.api_key+\"&language=en-US&page=1\")\r\n            .then(response => response.json())\r\n            .then(data => this.props.rating(data));\r\n    }\r\n\r\n    //update data on state change\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(prevState.type !== this.state.type){\r\n        fetch(this.props.api_url+this.state.type+\"/\"+this.state.category+\"?api_key=\"+this.props.api_key+\"&language=en-US&page=1\")\r\n            .then(response => response.json())\r\n            .then(data => this.props.rating(data));\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        this.setState({\r\n            type: nextProps.type,\r\n            category: nextProps.category\r\n          });   \r\n    }\r\n    \r\n    //navigate left and right\r\n    rightScroll = () => {\r\n        let scr = document.getElementById('top-rated');\r\n        scr.scrollLeft += 284;\r\n    }\r\n\r\n    leftScroll = () => {\r\n        let scr = document.getElementById('top-rated');\r\n        scr.scrollLeft += -284;\r\n    }\r\n\r\n    render() {\r\n        const { dat } = this.props;\r\n        \r\n        const base_url = \"https://image.tmdb.org/t/p/w1280\";\r\n        const list = (dat.length>0 && dat!==undefined) ? (\r\n            dat.map(element => {\r\n                return (\r\n                    <div key={element.id} className=\"img-wrapper\">\r\n                        <Link to={'/info/'+this.state.type+'/'+element.id}>\r\n                            <img src={base_url + element.poster_path} alt={element.title}/>\r\n                        </Link>\r\n                        <span className=\"mov-title\">{element.title || element.name}</span>\r\n                    </div>\r\n                ); \r\n            })\r\n        ) : (\r\n                <p>Loading..........</p>\r\n        );\r\n        \r\n\r\n        return(\r\n            <div className=\"sub-container\">\r\n                <h2 className=\"sub-heading\">TOP RATED</h2>\r\n                <hr className=\"sub-heading-line\"/>\r\n                <div className=\"row\">\r\n                    <i id=\"explore-left\" className=\"fas fa-angle-left explore\" onClick={this.leftScroll}></i>\r\n                    <i id=\"explore-right\" className=\"fas fa-angle-right explore\" onClick={this.rightScroll}></i>\r\n                        <div id=\"top-rated\" className=\"explore-row\">\r\n                            {list}\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      dat: state.rating\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        rating: (result) => {\r\n            return dispatch(\r\n            {\r\n                type: 'SET_TOP_RATED',\r\n                data: result\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopRated);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Upcoming extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          type: this.props.type,\r\n          category: this.props.category\r\n        };\r\n    }\r\n\r\n    //initial data load from api\r\n    componentDidMount(){\r\n        fetch(this.props.api_url+this.state.type+\"/\"+this.state.category+\"?api_key=\"+this.props.api_key+\"&language=en-US&page=1\")\r\n            .then(response => response.json())\r\n            .then(data => this.props.upcoming(data));\r\n    }\r\n\r\n    //update data on state change\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(prevState.type !== this.state.type){\r\n        fetch(this.props.api_url+this.state.type+\"/\"+this.state.category+\"?api_key=\"+this.props.api_key+\"&language=en-US&page=1\")\r\n            .then(response => response.json())\r\n            .then(data => this.props.upcoming(data));\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        this.setState({\r\n            type: nextProps.type,\r\n            category: nextProps.category\r\n          });   \r\n    }\r\n    \r\n    //navigate left and right\r\n    rightScroll = () => {\r\n        let scr = document.getElementById('upcoming');\r\n        scr.scrollLeft += 284;\r\n    }\r\n\r\n    leftScroll = () => {\r\n        let scr = document.getElementById('upcoming');\r\n        scr.scrollLeft += -284;\r\n    }\r\n\r\n    render() {\r\n        const { dat } = this.props;\r\n        const base_url = \"https://image.tmdb.org/t/p/w1280\";\r\n        const list = (dat.length>0 && dat!==undefined) ? (\r\n            dat.map(element => {\r\n                return (\r\n                    <div key={element.id} className=\"img-wrapper\">\r\n                        <Link to={'/info/'+this.state.type+'/'+element.id}>\r\n                            <img src={base_url + element.poster_path} alt={element.title}/>\r\n                        </Link>\r\n                        <span className=\"mov-title\">{element.title || element.name}</span>\r\n                    </div>\r\n                ); \r\n            })\r\n        ) : (\r\n                <p>Loading..........</p>\r\n        );\r\n        \r\n\r\n        return(\r\n            <div className=\"sub-container\">\r\n                <h2 className=\"sub-heading\">UPCOMING / ON THE AIR</h2>\r\n                <hr className=\"sub-heading-line\"/>\r\n                <div className=\"row\">\r\n                    <i id=\"explore-left\" className=\"fas fa-angle-left explore\" onClick={this.leftScroll}></i>\r\n                    <i id=\"explore-right\" className=\"fas fa-angle-right explore\" onClick={this.rightScroll}></i>\r\n                        <div id=\"upcoming\" className=\"explore-row\">\r\n                            {list}\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      dat: state.upcoming\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        upcoming: (result) => {\r\n            return dispatch(\r\n            {\r\n                type: 'SET_UPCOMING',\r\n                data: result\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Upcoming);","import React, { Component } from 'react';\r\nimport '../styles/home.css';\r\nimport NowPlaying from './nowPlaying';\r\nimport Popular from './popular';\r\nimport TopRated from './topRated';\r\nimport Upcoming from './upcoming';\r\n\r\nclass Home extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            display: 'movie'\r\n        };\r\n\r\n        this.api_url = 'https://api.themoviedb.org/3/';\r\n        this.api_key = '03100836a4b843b52bf4dab39d600f39';\r\n    }\r\n        \r\n    //handle nav bar item click\r\n    handleClick = (type) => {\r\n        if(type!==this.state.display){\r\n            this.setState({\r\n                display: type\r\n            });\r\n        }\r\n    };\r\n      \r\n    render(){\r\n        //render components based on type movie or tv show\r\n        const renderDisplay = (this.state.display === 'movie') ? (\r\n            <div className=\"main-wrapper\">\r\n                <NowPlaying type=\"movie\" category=\"now_playing\" heading=\"NOW PLAYING\" headingSub=\"in Theatres\" api_url={this.api_url} api_key={this.api_key}/>\r\n              <div className=\"container\">\r\n                <Upcoming type=\"movie\" category=\"upcoming\" api_url={this.api_url} api_key={this.api_key}/>\r\n                <Popular type=\"movie\" category=\"trending\" api_url={this.api_url} api_key={this.api_key}/>\r\n                <TopRated type=\"movie\" category=\"top_rated\" api_url={this.api_url} api_key={this.api_key}/>  \r\n              </div>\r\n            </div>\r\n          ) : (\r\n          <div className=\"main-wrapper\">\r\n              <NowPlaying type=\"tv\" category=\"airing_today\" heading=\"AIRING TODAY\" headingSub=\"on TV\" api_url={this.api_url} api_key={this.api_key}/>\r\n              <div className=\"container\">\r\n                <Upcoming type=\"tv\" category=\"on_the_air\" api_url={this.api_url} api_key={this.api_key}/>\r\n                <Popular type=\"tv\" category=\"trending\" api_url={this.api_url} api_key={this.api_key}/>\r\n                <TopRated type=\"tv\" category=\"top_rated\" api_url={this.api_url} api_key={this.api_key}/>\r\n              </div>\r\n          </div>\r\n        );\r\n\r\n        return(\r\n            <div className=\"home\">\r\n                <nav className=\"nav-bar\">\r\n                    <div className=\"nav-wrapper\">\r\n                        \r\n                        <div className=\"list-wrapper\"><ul id=\"nav-mobile\" className=\"right\">\r\n                            <li className=\"brand-logo\"><a href=\"/\">MOVIE SURF</a></li>\r\n                            <li className=\"nav-items\" onClick={() => this.handleClick('movie')}>MOVIES</li>\r\n                            <li className=\"nav-items\" onClick={() => this.handleClick('tv')}>TV SHOWS</li>\r\n                        </ul></div>\r\n                    </div>\r\n                </nav>\r\n                \r\n                {renderDisplay}\r\n                <hr/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport '../styles/info.css'\r\n\r\nclass Info extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data: {},\r\n            castData: null\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        //fetch movie/tv details from tmdb api\r\n        fetch(\"https://api.themoviedb.org/3/\"+this.props.match.params.type+\"/\"+this.props.match.params.info_id+\"?api_key=03100836a4b843b52bf4dab39d600f39\")\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    data: data\r\n                });\r\n        });\r\n        \r\n        //fetch credits from tmdb api\r\n        fetch(\"https://api.themoviedb.org/3/\"+this.props.match.params.type+\"/\"+this.props.match.params.info_id+\"/credits?api_key=03100836a4b843b52bf4dab39d600f39\")\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            this.setState({\r\n                castData: (data.cast<=20) ? (data.cast) : (data.cast.slice(0,20))\r\n            });\r\n        });\r\n\r\n        \r\n    }\r\n\r\n    //navigate right on click\r\n    rightScroll = () => {\r\n        let scr = document.getElementById('cast');\r\n        scr.scrollLeft += 284;\r\n    }\r\n\r\n    //navigate left on click\r\n    leftScroll = () => {\r\n        let scr = document.getElementById('cast');\r\n        scr.scrollLeft += -284;\r\n    }\r\n\r\n    render() {\r\n        //initialize image url paths\r\n        let poster_url = '';\r\n        const profile_url = 'https://image.tmdb.org/t/p/original'\r\n        const base_url = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\n        //set body background with movie/tv backdrop\r\n        if(this.state.data.backdrop_path !== undefined && this.state.data.backdrop_path !== null){\r\n            document.body.style.backgroundImage = \"linear-gradient(rgba(0,0,0,0.5),rgba(0,0,0,0.5)), url('\"+base_url+this.state.data.backdrop_path+\"')\";\r\n        }\r\n\r\n        //set poster image path\r\n        if(this.state.data.poster_path !== undefined && this.state.data.poster_path !== null){\r\n            poster_url = base_url + this.state.data.poster_path;\r\n        }\r\n        else{\r\n            poster_url = 'https://via.placeholder.com/150';\r\n        }\r\n\r\n        //fetch list of cast details\r\n        const castList = (this.state.castData !== null && this.state.castData.length>0) ? (\r\n            this.state.castData.map(element => {\r\n                return (\r\n                    <div key={element.id} className=\"img-wrapper\">\r\n                        <img src={(element.profile_path !==null) ? (profile_url + element.profile_path) : 'https://via.placeholder.com/150'} alt={element.name}/>\r\n                        <span className=\"cast-name\">{element.name} as {element.character}</span>\r\n                    </div>\r\n                ); \r\n            })\r\n        ) : (\r\n                <p>Not Available</p>\r\n        );\r\n        \r\n        //fetch genre of the movie/show\r\n        const genreList = (this.state.data.genres !== undefined) ? (\r\n            this.state.data.genres.map(element => {\r\n                return (\r\n                    <span key={element.id} className=\"genre\">{element.name}</span>\r\n                ); \r\n            })\r\n        ) : (\r\n                <span></span>\r\n        );\r\n\r\n        return(\r\n            <div className=\"grid-container\">\r\n                <div className=\"grid1\">\r\n                        <a href=\"https://varun-sankar-3229.github.io/movie-surf\"><i className=\"fas fa-arrow-left\"></i></a>\r\n                    \r\n                </div>\r\n\r\n                <div className=\"grid2\">\r\n                        <div className=\"info-wrapper\">\r\n                        <img className=\"poster-img\" src={poster_url} alt=\"poster\"/>\r\n                        <div className=\"info\">\r\n                            <h1>{this.state.data.title || this.state.data.name} <span className=\"year\">{(this.state.data.release_date !== undefined) ? ('(' + this.state.data.release_date.slice(0,4) + ')') : null}</span></h1>\r\n                            <h2 className=\"info-subheading\">GENRE</h2>\r\n                            \r\n                            <h3>{genreList}</h3>\r\n                            <div className=\"inline-wraps\">\r\n                                <div className=\"inline-wrap-items\">\r\n                                    <h2 className=\"info-subheading\">RATING</h2>\r\n                                    \r\n                                    <h3>{this.state.data.vote_average}</h3>\r\n                                </div>\r\n                                <div className=\"inline-wrap-items\">          \r\n                                    <h2 className=\"info-subheading\">STATUS</h2>\r\n                                    \r\n                                    <h3>{this.state.data.status}</h3>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"tagline\">\r\n                                <h2 className=\"info-subheading\">TAGLINE</h2>\r\n                                \r\n                                <p>{this.state.data.tagline || 'N/A'}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"grid3\">\r\n                    <div className=\"content-wrapper\">\r\n                        <div className=\"subcontent-wrapper\">\r\n                            <h2>OVERVIEW</h2>\r\n                            <hr/>\r\n                            <p>{this.state.data.overview}</p>\r\n                        </div>\r\n\r\n                        <div className=\"subcontent-wrapper\">\r\n                            <h2>CAST</h2>\r\n                            <hr/>\r\n                            <div className=\"row\">\r\n                                <i id=\"explore-left\" className=\"fas fa-angle-left nav-arrows\" onClick={this.leftScroll}></i>\r\n                                <i id=\"explore-right\" className=\"fas fa-angle-right nav-arrows\" onClick={this.rightScroll}></i>\r\n                                <div id=\"cast\" className=\"cast-list\">\r\n                                    {castList}    \r\n                                </div>\r\n                            </div>\r\n                        </div>  \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Info","import React, { Component } from 'react';\nimport './styles/footer.css'\nimport { Route, HashRouter } from 'react-router-dom'\nimport Home from './modules/home'\nimport Info from './modules/info'\n\nclass App extends Component {\n\n  render() {\n    //set up route paths to Home & Info components along with footer\n    return (\n      <HashRouter>\n        <div className=\"App\">\n          <Route exact path='movie-surf/#/' component={Home}/>\n          <Route path='/info/:type/:info_id' component={Info}/>\n          <footer>\n            <div className=\"footer\">\n                <div className=\"footer-info\">\n                    <h3>Designed & developed by,</h3>\n                    <p>Varun S</p>\n                </div>\n                <div className=\"footer-logo\">\n                    <a href=\"https://developers.themoviedb.org/3\"><img src=\"https://www.themoviedb.org/assets/1/v4/logos/408x161-powered-by-rectangle-green-bb4301c10ddc749b4e79463811a68afebeae66ef43d17bcfd8ff0e60ded7ce99.png\" alt=\"Powered by TMDb\"/></a>\n                </div>\n            </div>\n            <p>Movie Surf &copy; Copyright 2019</p>\n          </footer>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","//initialize redux state with empty arrays\r\nconst initState = {\r\n    playing: [],\r\n    popular: [],\r\n    upcoming: [],\r\n    rating: []\r\n}\r\n\r\nfunction setState(state = initState, action){\r\n    switch (action.type) {\r\n        case 'SET_NOW_PLAYING':\r\n            let nowPlaying = action.data.results;\r\n            return {\r\n                ...state,\r\n                playing: nowPlaying\r\n            };\r\n\r\n        case 'SET_POPULAR':\r\n            let popular = action.data.results;\r\n            return {\r\n                ...state,\r\n                popular: popular\r\n            };\r\n\r\n        case 'SET_UPCOMING':\r\n        let upcoming = action.data.results;\r\n        return {\r\n            ...state,\r\n            upcoming: upcoming\r\n        };\r\n\r\n        case 'SET_TOP_RATED':\r\n            let topRated = action.data.results;\r\n            return {\r\n                ...state,\r\n                rating: topRated\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default setState;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport setState  from './reducer/reducer';\n\n//create a redux store\nconst store = createStore(setState); \n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}